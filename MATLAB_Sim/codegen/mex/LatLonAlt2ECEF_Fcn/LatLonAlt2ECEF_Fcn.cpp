//
//  Academic License - for use in teaching, academic research, and meeting
//  course requirements at degree granting institutions only.  Not for
//  government, commercial, or other organizational use.
//
//  LatLonAlt2ECEF_Fcn.cpp
//
//  Code generation for function 'LatLonAlt2ECEF_Fcn'
//


// Include files
#include "LatLonAlt2ECEF_Fcn.h"
#include "mwmathutil.h"
#include "rt_nonfinite.h"

// Variable Definitions
static emlrtRSInfo c_emlrtRSI = { 17,  // lineNo
  "LatLonAlt2ECEF_Fcn",                // fcnName
  "/Users/samuelfeibel/Documents/Projects/Firefly System/MATLAB_Sim/LatLonAlt2ECEF_Fcn.m"// pathName 
};

static emlrtRTEInfo emlrtRTEI = { 13,  // lineNo
  9,                                   // colNo
  "sqrt",                              // fName
  "/Applications/MATLAB_R2020a.app/toolbox/eml/lib/matlab/elfun/sqrt.m"// pName
};

// Function Definitions
void LatLonAlt2ECEF_Fcn(const emlrtStack *sp, real_T Lat, real_T Lon, real_T Alt,
  real_T r0_ECEF[3])
{
  real_T t2;
  real_T t3;
  real_T t4;
  real_T t5;
  real_T t11;
  emlrtStack st;
  st.prev = sp;
  st.tls = sp->tls;

  // LATLONALT2ECEF_FCN
  //     R0_ECEF = LATLONALT2ECEF_FCN(LAT,LON,ALT)
  //     This function was generated by the Symbolic Math Toolbox version 8.5.
  //     10-Jun-2021 23:09:53
  t2 = Lat * 3.1415926535897931 / 180.0;
  t3 = Lon * 3.1415926535897931 / 180.0;
  t4 = muDoubleScalarCos(t2);
  t5 = muDoubleScalarSin(t2);
  t2 = t4 * t4 * 4.0680631590769E+13 + t5 * t5 * 4.0408299984659156E+13;
  st.site = &c_emlrtRSI;
  if (t2 < 0.0) {
    emlrtErrorWithMessageIdR2018a(&st, &emlrtRTEI,
      "Coder:toolbox:ElFunDomainError", "Coder:toolbox:ElFunDomainError", 3, 4,
      4, "sqrt");
  }

  t2 = muDoubleScalarSqrt(t2);
  t11 = 1.0 / t2;
  t2 = t4 * (Alt + t11 * 4.0680631590769E+13);
  r0_ECEF[0] = t2 * muDoubleScalarCos(t3);
  r0_ECEF[1] = t2 * muDoubleScalarSin(t3);
  r0_ECEF[2] = t5 * (Alt + t11 * 4.0408299984659148E+13);
}

// End of code generation (LatLonAlt2ECEF_Fcn.cpp)
